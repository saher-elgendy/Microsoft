{"version":3,"sources":["reusable/sign_form/signForm.js","reusable/sign_form/signFormMessage.js","reusable/sign_form/signFormGroup.js","pages/sign_in/sign_in_section/SignInFormBody.js","pages/sign_in/sign_in_section/index.js","pages/sign_in/index.js"],"names":["SignForm","classes","props","title","children","btnTwoTo","btnTwoLabel","btnTwoText","className","btn","btnTwo","icon","to","label","text","SignFormMessage","messageText","linkText","src","images","shield","alt","href","SignFormGroup","controlId","type","name","labelFor","placeholder","required","onChange","formControl","prepend","connect","setAuthenticated","useState","formData","setFormData","setUser","error","setError","handleChange","e","target","value","Form","Row","fomtControl","map","f","index","Col","md","key","style","color","fontSize","onClick","preventDefault","auth","signInWithEmailAndPassword","email","password","then","user","catch","err","message","SignInSection","Container","lg","SignIn"],"mappings":"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","file":"static/js/7.9ab83840.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReusableButton from '../button';\r\n\r\n\r\nconst SignForm = ({ classes, ...props }) => {\r\n    const { title, children, btnTwoTo, btnTwoLabel, btnTwoText } = props;\r\n\r\n    return (\r\n        <div className=\"sign-form d-flex flex-column align-items-start\">\r\n            <h3>{title}</h3>\r\n\r\n            {children}\r\n\r\n            <p className=\"font-size-bg font-weight-bold my-2 mx-md-0 mx-auto\">or</p>\r\n\r\n            <ReusableButton\r\n                classes={{\r\n                    btn: `d-flex flex-row-reverse mt-2 px-3 border-0 mx-md-0 mx-auto font-weight-md ${classes.btnTwo}`,\r\n                    icon: 'fab fa-facebook-f ml-2 bg-white text-primary p-1'\r\n                }}\r\n                to={btnTwoTo}\r\n                label={btnTwoLabel}\r\n                text={btnTwoText}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignForm;","import React from 'react';\r\nimport images from './../../images';\r\n\r\n\r\n\r\nconst SignFormMessage = (props) => {\r\n    const { messageText, to, linkText} = props;\r\n\r\n    return (\r\n        <div className=\"sign-form-message text-center mt-lg-0 mt-5\">\r\n            <img src={images.shield} alt=\"shield\"/>\r\n            <p className=\"mt-3\">{messageText}</p>\r\n            <a href={to} className=\"form-link\">{linkText}</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignFormMessage;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport Input from '../input';\r\n\r\n\r\n\r\nconst SignFormGroup = ({classes, ...props}) => {\r\n    const { controlId, type, name, label, labelFor, placeholder, required, onChange} = props;\r\n    const { formControl, prepend } = classes;\r\n\r\n    return (\r\n        <FormGroup className=\"mb-0\">\r\n            <Input\r\n                classes={{\r\n                    formControl: `sign-control border-left-0 px-2 ${formControl}`,\r\n                    label: `d-none ${classes.label}`,\r\n                    prepend: ` d-flex justify-content-center align-items-center px-3 bg-white ${prepend}`,\r\n                }}\r\n                controlId={controlId}\r\n                type={type}\r\n                name={name}\r\n                label={label}\r\n                labelFor={labelFor}\r\n                prepend={<i></i>}\r\n                placeholder={placeholder}\r\n                required={required}\r\n                onChange={onChange}\r\n            />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SignFormGroup;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { auth, db } from '../../../firebase';\r\nimport { setAuthenticated } from '../../../redux/user/action';\r\nimport { setClientAuthorization } from '../../../util/Auth';\r\nimport ReusableButton from './../../../reusable/button';\r\nimport SignFormGroup from './../../../reusable/sign_form/signFormGroup';\r\nimport firebase from 'firebase';\r\n\r\nconst SignInFormBody = ({ setAuthenticated }) => {\r\n    const [formData, setFormData] = useState({});\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(formData.email, formData.password)\r\n            .then(user => {\r\n                setUser(user);\r\n                setAuthenticated(user)\r\n            })\r\n            .catch(err => setError(err.message))\r\n    }\r\n    const formFields = [\r\n        {\r\n            classes: {\r\n                fomtControl: 'sign-in-control',\r\n                label: 'd-none',\r\n                prepend: 'fas fa-user'\r\n            },\r\n            controlId: 'email',\r\n            type: 'email',\r\n            name: 'email',\r\n            label: 'Email',\r\n            labelFor: 'email',\r\n            placeholder: 'Enter Your Email',\r\n\r\n        },\r\n        {\r\n            classes: {\r\n                fomtControl: 'sign-in-control',\r\n                label: 'd-none',\r\n                prepend: 'fas fa-key'\r\n            },\r\n            controlId: 'password',\r\n            type: 'password',\r\n            name: 'password',\r\n            label: 'Password',\r\n            labelFor: 'password',\r\n            placeholder: 'Enter Your Password',\r\n        },\r\n        {\r\n            classes: {\r\n                formControl: 'form-checkbox remember-checkbox d-none',\r\n                label: 'form-checkbox-label remember-checkbox-label d-block font-size-md mb-0 mt-5',\r\n                prepend: 'checkbox-prepend'\r\n            },\r\n            controlId: 'checkbox',\r\n            type: 'checkbox',\r\n            name: 'remember',\r\n            label: 'Remember Me',\r\n            labelFor: 'checkbox',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Form className=\"sign-in-form d-flex flex-md-row flex-column align-items-center flex-wrap mt-4\">\r\n            <Row>\r\n                {\r\n                    formFields.map((f, index) => {\r\n                        return (\r\n                            <Col md={6} className=\"mt-md-0 mt-4\">\r\n                                <SignFormGroup\r\n                                    key={index}\r\n                                    classes={f.classes}\r\n                                    controlId={f.controlId}\r\n                                    type={f.type}\r\n                                    name={f.name}\r\n                                    label={f.label}\r\n                                    labelFor={f.controlId}\r\n                                    placeholder={f.placeholder}\r\n                                    onChange={handleChange}\r\n                                    required={true}\r\n                                />\r\n                            </Col>\r\n                        );\r\n                    })\r\n                }\r\n                {\r\n                    error && <p style={{ color: \"red\", fontSize: 'small' }}>{error}</p>\r\n                }\r\n                <a href=\"#\" className=\"form-link ml-md-auto\">Forgot Your Password</a>\r\n\r\n            </Row>\r\n\r\n            <ReusableButton\r\n                classes={{\r\n                    btn: 'form-btn bg-success border-0 mt-5 font-weight-md'\r\n                }}\r\n                to=\"#\"\r\n                type=\"submit\"\r\n                label=\"log in\"\r\n                text=\"Log Into My Account Now\"\r\n                onClick={handleSignIn}\r\n            />\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default connect(null, { setAuthenticated })(SignInFormBody);\r\n\r\n","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { auth } from '../../../firebase';\r\nimport SignForm from './../../../reusable/sign_form/signForm';\r\nimport SignFormMessage from './../../../reusable/sign_form/signFormMessage';\r\nimport './index.css';\r\nimport SignInFormBody from './SignInFormBody';\r\n\r\n\r\nconst SignInSection = () => {\r\n    return (\r\n        <section className=\"section sign-in-section py-sm-0 py-4 bg-primary\">\r\n            <Container className=\"p-5 bg-primary\">\r\n                    <Row className=\"p-5 bg-light\">\r\n                        <Col  lg={8}>\r\n                            <SignForm\r\n                                classes={{\r\n                                    btnTwo: 'form-btn'\r\n                                }}\r\n                                btnTwoTo=\"#\"\r\n                                btnTwoLabel=\"sign in with facebook\"\r\n                                btnTwoText=\"Sign In With Facebook\"\r\n                                title=\"Sign in now!\"\r\n                            >\r\n                                <SignInFormBody />\r\n                            </SignForm>\r\n                        </Col>\r\n\r\n                        <Col lg={4}>\r\n                            <SignFormMessage\r\n                                messageText=\"Don't have an account ?\"\r\n                                to=\"/sign_up\"\r\n                                linkText=\"Sign Up\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SignInSection;","import React from 'react';\r\nimport Contacts from '../../reusable/contacts';\r\nimport Intro from '../../reusable/intro';\r\nimport Header from './../../reusable/demoheader';\r\nimport Footer from './../../reusable/footer';\r\nimport SignInSection from './sign_in_section';\r\n\r\n\r\nconst SignIn = () => {\r\n    return (\r\n       <>\r\n        <Header />\r\n        <Intro />\r\n        <SignInSection />\r\n        <Contacts />\r\n        <Footer />\r\n       </>\r\n    );\r\n}\r\n\r\nexport default SignIn;"],"sourceRoot":""}