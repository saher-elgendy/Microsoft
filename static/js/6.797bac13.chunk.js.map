{"version":3,"sources":["../node_modules/react-bootstrap/esm/utils/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","reusable/card.js","util/util.js","reusable/productCard.js","../node_modules/escape-string-regexp/index.js","pages/products/allProducts/filters.js","pages/products/allProducts/sortBy.js","redux/sort/action.js","pages/products/allProducts/index.js","redux/filters/action.js","pages/products/index.js"],"names":["className","React","forwardRef","p","ref","createElement","_extends","classNames","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","ReusableCard","classes","image","alt","title","btnLabel","btnText","onBtnClick","card","src","cardBody","btn","icon","btnIcon","label","onClick","setItemsNum","changeItemsNum","innerWidth","window","createSlides","data","itemsNum","slides","i","length","push","slice","filterProducts","products","filters","map","f","filter","category","reduce","acc","cur","sortProducts","sortBy","sort","a","b","prev","Number","newPrice","next","connect","state","cartProducts","addToCart","product","oldPrice","originalPrice","module","exports","string","TypeError","replace","Filters","handleCheckboxToggle","index","key","formControl","controlId","type","name","labelFor","onChange","e","undefined","updateSortBy","UPDATE_SORTBY","payload","sortByItems","id","target","s","query","addFilter","ADD_FILTER","removeFilter","REMOVE_FILTER","showingProducts","console","log","match","RegExp","escapeStringRegexp","test","Container","checked","includes","Row","Col","xl","lg","sm","Products"],"mappings":"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","file":"static/js/6.797bac13.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ReusableButton from './button';\r\n\r\nconst ReusableCard = ({ classes, ...props }) => {\r\n    const { image, alt, title, children, btnLabel, btnText, onBtnClick } = props;\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <img src={image} alt={alt} className={classes.image}/>\r\n            <Card.Body className={classes.cardBody}>\r\n                <Card.Title className={classes.title}>{title}</Card.Title>\r\n                {children}\r\n                <ReusableButton\r\n                    classes={{\r\n                        btn: classes.btn,\r\n                        icon: classes.btnIcon\r\n                    }}\r\n                    label={btnLabel}\r\n                    text={btnText}\r\n                    onClick={onBtnClick}\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ReusableCard;\r\n\r\n/*\r\nComponent implementation in parent: \r\n\r\n<ReusableCard\r\n    classes={{\r\n        card: '',\r\n        image: '',\r\n        cardBody: '',\r\n        title: '',\r\n        btn: '',\r\n        btnIcon: ''\r\n    }}\r\n    image={}\r\n    alt=\"\"\r\n    title={}\r\n    btnLabel=\"\"\r\n    btnText=\"\"\r\n    onBtnClick={}\r\n>\r\n</ReusableCard>\r\n*/\r\n\r\n","/** \r\n * that function set the number of items that createSlids functions uses to define the number\r\n * of elements for each carousel item in the carousel\r\n * \r\n * @param {function} changeItemsNum a function that change carousel item columns\r\n * number when the screen size change\r\n * \r\n * @returns {number} number of carousel item columns\r\n */\r\nexport const setItemsNum = (changeItemsNum) => {\r\n    const innerWidth = window.innerWidth;\r\n\r\n    if (innerWidth >= 1200) {\r\n        changeItemsNum(4);\r\n    }\r\n\r\n    else if (innerWidth < 1200 && innerWidth >= 992) {\r\n        changeItemsNum(3);\r\n    }\r\n\r\n    else if (innerWidth < 992 && innerWidth >= 768) {\r\n        changeItemsNum(2);\r\n    }\r\n\r\n    else {\r\n        changeItemsNum(1);\r\n    }\r\n}\r\n\r\n/**\r\n * carousel item can receive multiple elements(for bigger screens) or single element (small screen < 578px), \r\n * that function should create the slides that would be rendered in every single carousel item\r\n * \r\n * @param {array} data the array of objects that would be converted into slides (array of arrays of objects) that\r\n * would be rendered into carousel item elements\r\n * \r\n * @param {number} itemsNum the number of items per slide that is set by the function setItemsNum\r\n * \r\n * @returns {array} array of arrays of objects, each insider array contain multiple items or single item\r\n * according to size of the screen \r\n */\r\nexport const createSlides = (data, itemsNum) => {\r\n    let slides = [];\r\n\r\n    for (let i = 0; i < data.length; i = i + itemsNum) {\r\n        slides.push(data.slice(i, i + itemsNum));\r\n    }\r\n\r\n    return slides;\r\n}\r\n\r\n/**\r\n * this function filter products according to filters chosen by the user\r\n * \r\n * @param {array} products the array of products\r\n * \r\n * @param {array} filters the array can contain multiple filters or single one\r\n * \r\n * @returns {array} the filtered products , if no filters chosen, the products are returned unchanged\r\n */\r\nexport const filterProducts = (products, filters) => {\r\n    //filter products according to the filter/filters chosen\r\n    return filters.length ? filters.map(f => products.filter(p => p.category === f))\r\n        .reduce((acc, cur) => [...acc, ...cur], []) : products\r\n}\r\n\r\n/**\r\n * this function sort products according to a sort query that can be  'low to high price' or 'high to low price' or 'none'\r\n * \r\n * prices are strings with '$' sign preceding, they should be converted into numbers so that the sort process\r\n * can be correctly done, the dollar sign should be removed  before comparison\r\n * \r\n * @param {array} products\r\n * \r\n * @param {string} sortBy\r\n */\r\nexport const sortProducts = (products, sortBy) => {\r\n    if (sortBy) {\r\n      return  products.sort((a, b) => {\r\n            //converting prices strings into numbers and removing the dollar sign\r\n            const prev = Number(a.newPrice.slice(0, -1));\r\n            const next = Number(b.newPrice.slice(0, -1));\r\n\r\n            return sortBy === 'low to high price' ? (prev - next) : sortBy === 'high to low price' ?\r\n                (next - prev) : products;\r\n        });\r\n    } else {\r\n        return products;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {array} data \r\n */\r\n// Fisher-Yates Shuffle\r\nexport const shuffle = (data) => {\r\n    var currentIndex = data.length,\r\n        temporaryValue, randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = data[currentIndex];\r\n        data[currentIndex] = data[randomIndex];\r\n        data[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return data;\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart } from './../redux/cart/action';\r\nimport ReusableCard from './card';\r\nimport Price from './price';\r\n\r\nconst ProductCard = ({product, cartProducts, addToCart}) => {\r\n    const { image, title, oldPrice, newPrice } = product;\r\n\r\n    return (\r\n        <ReusableCard\r\n            classes={{\r\n                card: 'product-card text-center shadow',\r\n                image: 'card-image',\r\n                cardBody: 'flex-grow-1',\r\n                title: 'h5',\r\n                btn: 'w-100',\r\n                btnIcon: 'fas fa-shopping-cart mr-2'\r\n            }}\r\n            image={image}\r\n            alt={`${title}`}\r\n            title={title}\r\n            btnLabel=\"add to Cart\"\r\n            btnText=\"Add To Cart\"\r\n            onBtnClick={() => addToCart(product, cartProducts)}\r\n        >\r\n            <Price\r\n                classes={{\r\n                    originalPrice: 'font-weight-bold',\r\n                    newPrice: 'font-size-xl font-weight-md text-primary'\r\n                }}\r\n                originalPrice={oldPrice}\r\n                newPrice={newPrice}\r\n            />\r\n        </ReusableCard>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cartProducts: state.cartProducts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addToCart })(ProductCard);","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","import React from 'react';\r\nimport Input from '../../../reusable/input';\r\n\r\n\r\nconst Filters = ({filters, handleCheckboxToggle}) => {\r\n    return (\r\n        <div className=\"filters d-flex flex-column align-items-md-start align-items-center\">\r\n            <p className=\"font-weight-bold\">filter proucts by:</p>\r\n            <ul className=\"filters-list d-flex\">\r\n                {\r\n                    filters.map((filter, index) => {\r\n                        return (\r\n                            <li\r\n                                key={index}\r\n                                className=\"filter-item\"\r\n                            >\r\n                                <Input\r\n                                    classes={{\r\n                                        formControl: 'filter-checkbox d-none',\r\n                                        label: 'filter-label px-md-4 px-3 font-weight-md',\r\n                                    }}\r\n                                    controlId={`${filter}-filter-checkbox`}\r\n                                    type=\"checkbox\"\r\n                                    name=\"filter_checkbox\"\r\n                                    label={filter}\r\n                                    labelFor={`${filter}-filter-checkbox`}\r\n                                    onChange={e => handleCheckboxToggle(e, filter)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateSortBy } from './../../../redux/sort/action';\r\n\r\nconst SortBy = (props) => {\r\n    const { sortByItems, updateSortBy } = props;\r\n    \r\n    return (\r\n        <div className=\"sort-by mt-md-0 mt-4\">\r\n            <p className=\"font-weight-bold\">sort products by:</p>\r\n            <select\r\n                name=\"sort_by_select\"\r\n                id=\"sort-by-select\"\r\n                className=\"p-1\"\r\n                onChange={e => updateSortBy(e.target.value)}\r\n            >\r\n                {\r\n                   sortByItems.map((s, index) => {\r\n                        return (\r\n                            <option key={index} value={s}>{s}</option>\r\n                        );\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(undefined, { updateSortBy })(SortBy);","import { UPDATE_SORTBY } from './actionTypes';\r\n\r\n\r\nexport const updateSortBy = (sortBy) => {\r\n    return {\r\n        type: UPDATE_SORTBY,\r\n        payload: sortBy\r\n    }\r\n}\r\n\r\n","import escapeStringRegexp from 'escape-string-regexp';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport ProductCard from '../../../reusable/productCard';\r\nimport { filterProducts, sortProducts } from '../../../util/util';\r\nimport { addFilter, removeFilter } from './../../../redux/filters/action';\r\nimport Filters from './filters';\r\nimport './index.css';\r\nimport SortBy from './sortBy';\r\n\r\nconst AllProducts = ({ products, filters, sortBy, addFilter, removeFilter, query }) => {\r\n    const allFilters = ['Mac', 'iPhone', 'iPad', 'Accessories', 'Laptops'];\r\n    const sortByItems = ['none', 'low to high price', 'high to low price'];\r\n\r\n    // const [showingProducts, setShowingProducts] = useState(products)\r\n    /**\r\n     * if corresponding checkbox is checked and filters array does not contain that filter, it should be added\r\n     * unchecking a checkbox remove the corresponding filter from filters array\r\n     * \r\n     * @param {string} filter \r\n     */\r\n    const handleCheckboxToggle = (e, filter) => {\r\n        if (e.target.checked && !filters.includes(filter)) {\r\n            addFilter(filter);\r\n        }\r\n        else {\r\n            removeFilter(filter);\r\n        }\r\n    }\r\n    \r\n    let showingProducts = filterProducts(products, filters);\r\n    sortProducts(showingProducts, sortBy);\r\n    console.log(showingProducts)\r\n    if(query) {\r\n        const match = new RegExp(escapeStringRegexp(query), 'i');\r\n        showingProducts = showingProducts.filter(p => match.test(p.title))\r\n    }\r\n    \r\n    return (\r\n        <section className=\"section all-products-section py-sm-0 py-3\">\r\n            <Container className=\"py-5\">\r\n                <div className=\"d-flex flex-md-row flex-column justify-content-md-between justify-content-center align-items-center\">\r\n                    <Filters filters={allFilters} handleCheckboxToggle={handleCheckboxToggle} />\r\n                    <SortBy sortByItems={sortByItems} />\r\n                </div>\r\n                <Row className=\"flex-wrap mt-5 justify-content-center\">\r\n                    {\r\n                        showingProducts.map((p, index) => {\r\n                            return (\r\n                                <Col key={index} xl={3} lg={4} sm={6} className=\"mt-4\">\r\n                                    <ProductCard product={p} />\r\n                                </Col>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filters: state.filters,\r\n    sortBy: state.sortBy,\r\n    products: state.products.products,\r\n    query: state.query\r\n});\r\n\r\nexport default connect(mapStateToProps, { addFilter, removeFilter })(AllProducts);","import { ADD_FILTER, REMOVE_FILTER } from './actionTypes';\r\n\r\n/**\r\n * addFilter action adds a filter to filters array each time a filter checkbox is checked\r\n * removeFilter action removes a filter when the corresponding checkbox is unchecked\r\n * @param {string} filter \r\n */\r\nexport const addFilter = (filter) => {\r\n    return {\r\n        type: ADD_FILTER,\r\n        payload: filter\r\n    }\r\n}\r\n\r\nexport const removeFilter = (filter) => {\r\n    return {\r\n        type: REMOVE_FILTER,\r\n        payload: filter\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Contacts from '../../reusable/contacts';\r\nimport Intro from '../../reusable/intro';\r\nimport Header from './../../reusable/demoheader/index';\r\nimport Footer from './../../reusable/footer/index';\r\nimport AllProducts from './allProducts/index';\r\n\r\n\r\nconst Products = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Intro />\r\n            <AllProducts />\r\n            <Contacts />\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Products;"],"sourceRoot":""}